/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}.list-reset{list-style:none;padding:0;margin:0}.transitionFirst{transition:all .32s linear}body,html{padding:0;margin:0;font-family:Muller,sans-serif}*,:after,:before{box-sizing:border-box}a,h1,h2,h3,h4,h5,h6,p,ul{padding:0;margin:0}li{list-style-type:none}.container{margin:0 auto;width:1200px;max-width:100%;height:100%;padding-left:12px;padding-right:12px}@keyframes a{0%{width:0}to{width:120%}}.logo{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;text-decoration:none}.logo__text{width:170px;font-weight:400;font-size:18px;line-height:20px;color:#fff}.logo__img{margin-right:23px}.logo img{width:80px;height:80px}.header{padding-top:50px;padding-bottom:104px;position:relative;background:#2b74b9;-webkit-clip-path:polygon(0 100%,100% 60%,100% 0,0 0);clip-path:polygon(0 100%,100% 60%,100% 0,0 0);z-index:2}.header__container{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center}.footer{background:#333;padding:60px 0}.travel__list{-ms-flex-pack:justify;justify-content:space-between;margin:0;padding:0;width:100%;max-width:1200px;margin-top:60px}.travel__list,.travel__list__item{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.travel__list__item{text-decoration:none;width:200px;-ms-flex-direction:column;flex-direction:column}.travel__list__item_text{font-style:italic;font-weight:700;font-size:30px;line-height:36px;text-align:center;color:#000;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;margin-top:32px}.slider,.slider-card,.travel__list__item_text{display:-ms-flexbox;display:flex}.slider-card{max-width:373px;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;margin-right:41px}.slider-card__img img{width:100%;margin-bottom:24px}.slider-card__item-top{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;margin-bottom:8px}.slider__item-top_left{font-style:italic;font-weight:700;font-size:26px;line-height:36px;color:#000}.slider__item-top_right{color:#787878;font-weight:400;font-size:16px;line-height:36px}.slider-card__item-middle{font-style:normal;font-weight:400;font-size:15px;line-height:24px;color:#000;margin-bottom:32px}.bottom-slider{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:center;align-items:center}.bottom-slider img{margin-right:16px;margin-bottom:23px}.slider-card__footer{width:100%;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center}.slider-card__footer-left,.slider-card__footer-right{font-style:italic;font-weight:700;font-size:14px;line-height:14px;-webkit-text-decoration-line:underline;text-decoration-line:underline;color:#000}@font-face{font-family:Muller;src:url(../fonts/MullerRegular.woff2) format("woff2"),url(../fonts/MullerRegular.woff) format("woff");font-weight:400;font-style:normal}@font-face{font-family:Muller;src:url(../fonts/MullerRegularItalic.woff2) format("woff2"),url(../fonts/MullerRegularItalic.woff) format("woff");font-weight:400;font-style:italic}@font-face{font-family:Muller;src:url(../fonts/MullerMedium.woff2) format("woff2"),url(../fonts/MullerMedium.woff) format("woff");font-weight:500;font-style:normal}@font-face{font-family:Muller;src:url(../fonts/MullerBold.woff2) format("woff2"),url(../fonts/MullerBold.woff) format("woff");font-weight:700;font-style:normal}@font-face{font-family:Muller;src:url(../fonts/MullerExtraBold.woff2) format("woff2"),url(../fonts/MullerExtraBold.woff) format("woff");font-weight:800;font-style:normal}@font-face{font-family:Muller;src:url(../fonts/MullerExtraBoldItalic.woff2) format("woff2"),url(../fonts/MullerExtraBoldItalic.woff) format("woff");font-weight:800;font-style:italic}@font-face{font-family:Muller;src:url(../fonts/MullerBlack.woff2) format("woff2"),url(../fonts/MullerBlack.woff) format("woff");font-weight:900;font-style:normal}@font-face{font-family:Muller;src:url(../fonts/MullerBlackItalic.woff2) format("woff2"),url(../fonts/MullerBlackItalic.woff) format("woff");font-weight:900;font-style:italic}.navigation__list{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;list-style:none;padding:0;margin:0}.navigation__item{margin-right:40px}.navigation__link{font-style:italic;font-weight:700;font-size:20px;line-height:30px;cursor:pointer;text-decoration:none;color:#fff;transition:all .3s ease-in;position:relative}.navigation__link:after{content:"";position:absolute;bottom:0;left:-10%;width:0;height:10px;z-index:-1;background-color:#fecc00;transform:skewX(-30deg);transition:all .3s ease-in}.navigation__link:hover{color:#000}.navigation__link:hover:after{animation:a .3s ease-in forwards}.button{font-style:normal;font-weight:700;font-size:17px;line-height:15px;text-transform:uppercase;color:#000;left:19.73;list-style:none;padding:0;margin:0;cursor:pointer;background-color:#fecc00;z-index:1;border:1px solid transparent;border-radius:10px;text-decoration:none;text-align:center;position:relative;padding:14px 37px 12px 19px}.button,.button svg{transition:all .4s ease-in}.button svg{position:absolute;height:13px;right:17px;width:13px;fill:#000}.button:hover{color:#fff;background-color:#000}.button:hover svg{fill:#fff}.section__preview{background:url(../../../img/preview-bg.jpg);background-position:50%;background-size:cover;background-repeat:no-repeat;height:100%;margin-bottom:-60px;padding-bottom:310px;padding-top:80px;z-index:1;transform:translateY(-96px);-webkit-clip-path:polygon(0 0,100% 0,100% 79%,0 100%);clip-path:polygon(0 0,100% 0,100% 79%,0 100%)}.preview{padding-top:130px;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column;position:relative}.preview__title{font-style:italic;font-weight:900;font-size:80px;line-height:90px;color:#fff;width:71%}.preview-subtitle{left:340px;margin-top:45px;max-width:30%;position:relative}.preview-subtitle:after{content:url(../../../img/preview-animation-line.svg);position:absolute;top:52px;right:-306px;width:100%}.preview-subtitle__title{font-style:italic;font-weight:700;font-size:30px;line-height:30px;color:#fff}.preview-subtitle__text{font-family:Muller;font-style:italic;font-weight:400;font-size:20px;line-height:30px;padding-top:12px;color:#fff}.preview__image{overflow:hidden;position:absolute;bottom:-185px;right:-350px}.preview__image img{max-width:860px;max-height:723.36px}.section__travel{background-color:#fff}.travel{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-direction:column;flex-direction:column}.travel__title{font-style:italic;font-weight:800;font-size:40px;line-height:40px;text-align:center;margin-bottom:30px}.travel__subtitle{font-weight:400;font-size:20px;line-height:30px;text-align:center;color:#000;width:817px}.section__route{background-color:#fff;padding-top:50px;overflow-x:hidden}.route__title{font-style:italic;font-weight:800;font-size:40px;line-height:40px;text-align:center;color:#000;margin-bottom:60px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
